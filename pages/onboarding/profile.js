// üìÑ –§–∞–π–ª: /pages/onboarding/profile.js

// üì¶ –ò–º–ø–æ—Ä—Ç—ã React –∏ —Ö—É–∫–æ–≤
import { useState, useEffect } from 'react'
import { useRouter } from 'next/router'

// üì¶ –ò–º–ø–æ—Ä—Ç –∫–ª–∏–µ–Ω—Ç–∞ Supabase
import { supabase } from '../../lib/supabase'

// üü© –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫–∞
export default function CarrierOnboarding() {
  const router = useRouter()
  const role = router.query.role

  const [formData, setFormData] = useState({
    company_name: '', // –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –∏–ª–∏ –∏–º—è —Ñ–∏–∑–ª–∏—Ü–∞
    full_name: '',     // –ü–æ–ª–Ω–æ–µ –∏–º—è (–§–ò–û)
    truck_type: '',    // –¢–∏–ø —Ç—Ä–∞–∫–∞
    mc_number: '',     // –ù–æ–º–µ—Ä –ª–∏—Ü–µ–Ω–∑–∏–∏ –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫–∞ (MC)
    usdot_number: '',  // –ù–æ–º–µ—Ä USDOT
    operating_state: '', // –®—Ç–∞—Ç—ã
    phone: '',         // –¢–µ–ª–µ—Ñ–æ–Ω (–æ–±—â–∏–π –¥–ª—è –æ–±–µ–∏—Ö —Ä–æ–ª–µ–π)
    address: '',       // –ê–¥—Ä–µ—Å (—Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π)
    is_individual: true // —Ñ–ª–∞–≥ "–Ø ‚Äî —á–∞—Å—Ç–Ω–æ–µ –ª–∏—Ü–æ" (—Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π)
  })

  const [documents, setDocuments] = useState([]) // –º–∞—Å—Å–∏–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  const [profileCompleted, setProfileCompleted] = useState(false) // —Ñ–ª–∞–≥ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏

  const truckTypes = [
    'Flatbed', 'Dry Van', 'Reefer', 'Step Deck', 'Box Truck', 'Power Only', 'Hotshot', 'Tanker'
  ]

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª—é–±–æ–≥–æ input/checkbox
  const handleChange = (e) => {
    const { name, value, type, checked } = e.target
    setFormData((prev) => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value
    }))
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
  const handleFileChange = async (e) => {
    const file = e.target.files[0]
    if (!file) return

    if (file.size > 15 * 1024 * 1024) {
      alert('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º—É–º 15MB.')
      return
    }

    if (documents.length >= 5) {
      alert('–ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ –±–æ–ª–µ–µ 5 –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.')
      return
    }

    const { data: userData } = await supabase.auth.getUser()
    const user = userData?.user
    if (!user) {
      alert('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω')
      return
    }

    const filePath = `${user.id}/${Date.now()}_${file.name}`
    const { error } = await supabase.storage.from('truck-documents').upload(filePath, file)

    if (error) {
      alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ' + error.message)
    } else {
      setDocuments((prev) => [...prev, { name: file.name, path: filePath }])
    }
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
  const handleRemoveFile = async (index) => {
    const fileToRemove = documents[index]
    const { error } = await supabase.storage.from('truck-documents').remove([fileToRemove.path])

    if (error) {
      alert('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞: ' + error.message)
    } else {
      setDocuments((prev) => prev.filter((_, i) => i !== index))
    }
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
  const handleSubmit = async () => {
    const { data: userData } = await supabase.auth.getUser()
    const user = userData?.user
    if (!user) {
      alert('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω')
      return
    }

    const payload = {
      user_id: user.id,
      company_name: formData.company_name,
      full_name: formData.full_name,
      phone: formData.phone // üìå –¢–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –æ–±–µ–∏—Ö —Ä–æ–ª–µ–π
    }

    // –ï—Å–ª–∏ —ç—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –∞–¥—Ä–µ—Å –∏ is_individual
    if (role === 'shipper') {
      payload.address = formData.address
      payload.is_individual = formData.is_individual
    }

    // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ç—Ä–∞–∫–∞
    if (role === 'carrier') {
      Object.assign(payload, {
        truck_type: formData.truck_type,
        mc_number: formData.mc_number,
        usdot_number: formData.usdot_number,
        operating_state: formData.operating_state
      })
    }

    const { error } = await supabase.from(role === 'carrier' ? 'carrier_profiles' : 'shipper_profiles').insert(payload)

    if (error) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: ' + error.message)
    } else {
      setProfileCompleted(true)
      router.push('/dashboard')
    }
  }

  return (
    <div className="max-w-xl mx-auto py-10 px-4">
      <h2 className="text-2xl font-bold mb-6">{role === 'carrier' ? '–°—Ç–∞—Ç—å –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫–æ–º' : '–°—Ç–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–º'}</h2>

      {/* –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ / –∏–º—è */}
      <label className="block font-medium">–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ / –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –∏–º—è</label>
      <input name="company_name" value={formData.company_name} onChange={handleChange} className="border border-gray-300 rounded px-3 py-2 mb-4 w-full" />

      {/* –§–ò–û */}
      <label className="block font-medium">–ü–æ–ª–Ω–æ–µ –∏–º—è (–§–ò–û)</label>
      <input name="full_name" value={formData.full_name} onChange={handleChange} className="border border-gray-300 rounded px-3 py-2 mb-4 w-full" />

      {/* –¢–µ–ª–µ—Ñ–æ–Ω (–¥–ª—è –≤—Å–µ—Ö) */}
      <label className="block font-medium">–¢–µ–ª–µ—Ñ–æ–Ω</label>
      <input name="phone" value={formData.phone} onChange={handleChange} className="border border-gray-300 rounded px-3 py-2 mb-4 w-full" />

      {/* –¢–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π */}
      {role === 'shipper' && (
        <>
          <label className="flex items-center mb-4">
            <input type="checkbox" name="is_individual" checked={formData.is_individual} onChange={handleChange} className="mr-2" />
            –Ø ‚Äî —á–∞—Å—Ç–Ω–æ–µ –ª–∏—Ü–æ
          </label>

          <label className="block font-medium">–¢–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å</label>
          <input name="address" value={formData.address} onChange={handleChange} className="border border-gray-300 rounded px-3 py-2 mb-4 w-full" />
        </>
      )}

      {/* –¢–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫–æ–≤ */}
      {role === 'carrier' && (
        <>
          <label className="block font-medium">–¢–∏–ø —Ç—Ä–∞–∫–∞</label>
          <select name="truck_type" value={formData.truck_type} onChange={handleChange} className="border border-gray-300 rounded px-3 py-2 mb-4 w-full">
            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ...</option>
            {truckTypes.map((type) => (
              <option key={type} value={type}>{type}</option>
            ))}
          </select>

          <label className="block font-medium">–ù–æ–º–µ—Ä –ª–∏—Ü–µ–Ω–∑–∏–∏ –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫–∞ (MC)</label>
          <input name="mc_number" value={formData.mc_number} onChange={handleChange} className="border border-gray-300 rounded px-3 py-2 mb-4 w-full" />

          <label className="block font-medium">–ù–æ–º–µ—Ä USDOT</label>
          <input name="usdot_number" value={formData.usdot_number} onChange={handleChange} className="border border-gray-300 rounded px-3 py-2 mb-4 w-full" />

          <label className="block font-medium">–®—Ç–∞—Ç—ã, –≥–¥–µ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ</label>
          <input name="operating_state" value={formData.operating_state} onChange={handleChange} className="border border-gray-300 rounded px-3 py-2 mb-6 w-full" />
        </>
      )}

      {/* –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ */}
      <label className="block font-medium mb-2">
        {role === 'carrier' ? '–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã —Ç—Ä–∞–∫–∞' : '–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç (–ø–∞—Å–ø–æ—Ä—Ç / –ª–∏—Ü–µ–Ω–∑–∏—è)'} (–º–∞–∫—Å. 5 —Ñ–∞–π–ª–æ–≤ –ø–æ 15MB)
      </label>
      <input
        type="file"
        accept=".pdf,.jpg,.jpeg,.png"
        onChange={handleFileChange}
        className="block mb-4"
      />

      {/* –°–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ */}
      <ul className="text-sm text-gray-700 mb-4">
        {documents.map((doc, idx) => (
          <li key={idx} className="flex justify-between items-center mb-1">
            <span>üìÑ {doc.name}</span>
            <button
              onClick={() => handleRemoveFile(idx)}
              className="text-red-600 hover:underline text-xs"
            >–£–¥–∞–ª–∏—Ç—å</button>
          </li>
        ))}
      </ul>

      {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
      {!profileCompleted && (
        <button className="bg-green-700 text-white px-4 py-2 rounded" onClick={handleSubmit}>
          –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
        </button>
      )}
    </div>
  )
}
